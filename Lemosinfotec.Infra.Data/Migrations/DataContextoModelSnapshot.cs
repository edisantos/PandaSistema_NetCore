// <auto-generated />
using Lemosinfotec.Infra.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Lemosinfotec.Infra.Data.Migrations
{
    [DbContext(typeof(DataContexto))]
    partial class DataContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Cliente", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("Data");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("VeiculoId1");

                    b.HasKey("VeiculoId");

                    b.HasIndex("VeiculoId1");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<int>("FornecedorId");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoPecaId");

                    b.HasKey("EstoqueId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("TipoPecaId");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(30");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Data");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Uf")
                        .HasColumnType("varchar(2)");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedore");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Mecanico", b =>
                {
                    b.Property<int>("MecanicoId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("MecanicoId");

                    b.ToTable("Mecanicos");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Registro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("Data");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MecanicoId");

                    b.Property<int>("TipoManutencaoId");

                    b.Property<int>("TipoPecaId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal");

                    b.HasKey("id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MecanicoId");

                    b.HasIndex("TipoManutencaoId");

                    b.HasIndex("TipoPecaId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.TipoManutencao", b =>
                {
                    b.Property<int>("TipoManuId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoManuId");

                    b.ToTable("TipoManutencao");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.TipoPeca", b =>
                {
                    b.Property<int>("TipoPecaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FornecedorId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoPecaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("TipoPecas");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MarcaId");

                    b.Property<string>("Nome");

                    b.HasKey("VeiculoId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Cliente", b =>
                {
                    b.HasOne("Lemosinfotec.Domain.Entidades.Veiculo", "Veiculo")
                        .WithMany("Cliente")
                        .HasForeignKey("VeiculoId1");
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Estoque", b =>
                {
                    b.HasOne("Lemosinfotec.Domain.Entidades.Fornecedor", "Fornecedore")
                        .WithMany("Estoque")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lemosinfotec.Domain.Entidades.TipoPeca", "TipoPeca")
                        .WithMany("Estoque")
                        .HasForeignKey("TipoPecaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Registro", b =>
                {
                    b.HasOne("Lemosinfotec.Domain.Entidades.Cliente", "Cliente")
                        .WithMany("Registro")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lemosinfotec.Domain.Entidades.Mecanico", "Mecanico")
                        .WithMany("Registro")
                        .HasForeignKey("MecanicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lemosinfotec.Domain.Entidades.TipoManutencao", "TipoManutencao")
                        .WithMany("Registro")
                        .HasForeignKey("TipoManutencaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lemosinfotec.Domain.Entidades.TipoPeca", "TipoPeca")
                        .WithMany("Registro")
                        .HasForeignKey("TipoPecaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.TipoPeca", b =>
                {
                    b.HasOne("Lemosinfotec.Domain.Entidades.Fornecedor", "Fornecedores")
                        .WithMany("TipoPeca")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lemosinfotec.Domain.Entidades.Veiculo", b =>
                {
                    b.HasOne("Lemosinfotec.Domain.Entidades.Marca", "Marca")
                        .WithMany("Veiculo")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
